{
  "properties": {
    "activities": [
      {
        "type": "Copy",
        "typeProperties": {
          "source": {
            "type": "DelimitedTextSource",
            "formatSettings": {
              "type": "DelimitedTextReadSettings"
            },
            "storeSettings": {
              "type": "LakehouseReadSettings",
              "recursive": true,
              "enablePartitionDiscovery": false
            },
            "datasetSettings": {
              "type": "DelimitedText",
              "typeProperties": {
                "location": {
                  "type": "LakehouseLocation",
                  "fileName": "dept.csv"
                },
                "columnDelimiter": ",",
                "quoteChar": "\"",
                "escapeChar": "\\",
                "firstRowAsHeader": true
              },
              "schema": [],
              "linkedService": {
                "name": "Lakehouse_for_files",
                "properties": {
                  "type": "Lakehouse",
                  "typeProperties": {
                    "artifactId": "0db3ba47-3a72-939c-4965-4ba64ea02a8a",
                    "workspaceId": "00000000-0000-0000-0000-000000000000",
                    "rootFolder": "Files"
                  },
                  "annotations": []
                }
              },
              "annotations": []
            }
          },
          "sink": {
            "type": "DataWarehouseSink",
            "tableOption": "autoCreate",
            "allowCopyCommand": true,
            "copyCommandSettings": {},
            "datasetSettings": {
              "type": "DataWarehouseTable",
              "typeProperties": {
                "schema": {
                  "value": "@pipeline().parameters.schema",
                  "type": "Expression"
                },
                "table": {
                  "value": "@{concat(pipeline().parameters.Table, '-', \n         formatDateTime(pipeline().TriggerTime, 'yyyy'), '-', \n         formatDateTime(pipeline().TriggerTime, 'MM'), '-', \n         formatDateTime(pipeline().TriggerTime, 'dd'))}",
                  "type": "Expression"
                }
              },
              "schema": [],
              "linkedService": {
                "name": "WH_Table",
                "properties": {
                  "type": "DataWarehouse",
                  "typeProperties": {
                    "artifactId": "bfeb9fee-509d-4258-975c-fc8f8a05be9b",
                    "endpoint": "6a62gxp7mqtuvap26i7bqlvmim-csr3i4nk22puvdkyeewkn3d2zy.datawarehouse.fabric.microsoft.com",
                    "workspaceId": "71b4a314-d6aa-4a9f-8d58-212ca6ec7ace"
                  },
                  "annotations": []
                }
              },
              "annotations": []
            }
          },
          "translator": {
            "type": "TabularTranslator",
            "mappings": [
              {
                "source": {
                  "name": "dept_id",
                  "type": "String",
                  "physicalType": "String"
                },
                "sink": {
                  "name": "dept_id",
                  "physicalType": "varchar",
                  "length": "8000"
                }
              },
              {
                "source": {
                  "name": "dept_name",
                  "type": "String",
                  "physicalType": "String"
                },
                "sink": {
                  "name": "dept_name",
                  "physicalType": "varchar",
                  "length": "8000"
                }
              },
              {
                "source": {
                  "name": "location",
                  "type": "String",
                  "physicalType": "String"
                },
                "sink": {
                  "name": "location",
                  "physicalType": "varchar",
                  "length": "8000"
                }
              }
            ],
            "typeConversion": true,
            "typeConversionSettings": {
              "allowDataTruncation": true,
              "treatBooleanAsNumber": false
            }
          },
          "enableStaging": true
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Copy data1",
        "dependsOn": []
      },
      {
        "type": "InvokePipeline",
        "typeProperties": {
          "parameters": {},
          "waitOnCompletion": true,
          "workspaceId": "00000000-0000-0000-0000-000000000000",
          "pipelineId": "d8fc5ad9-e5b3-9e4a-4e09-832583d8f16d",
          "operationType": "InvokeFabricPipeline"
        },
        "externalReferences": {
          "connection": "d864734d-2664-4940-b433-ed3cfa03dc2b"
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Invoke pipeline1",
        "dependsOn": [
          {
            "activity": "Copy data1",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      }
    ],
    "parameters": {
      "Table": {
        "type": "string",
        "defaultValue": "dept"
      },
      "schema": {
        "type": "string",
        "defaultValue": "dbo"
      }
    }
  }
}